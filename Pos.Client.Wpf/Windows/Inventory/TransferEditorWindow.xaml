<Window x:Class="Pos.Client.Wpf.Windows.Inventory.TransferEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="clr-namespace:Pos.Client.Wpf.Converters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="Stock Transfer" Width="1100" Height="760"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <conv:QtyVarianceConverter x:Key="QtyVarianceConverter"/>
    </Window.Resources>
    <DockPanel>

        <!-- Top bar -->
        <ToolBar DockPanel.Dock="Top">
            <TextBlock Text="From:" Margin="0,0,6,0" VerticalAlignment="Center"/>
            <ComboBox x:Name="FromTypeBox" Width="120" Margin="0,0,6,0"
                      SelectedIndex="0">
                <ComboBoxItem Content="Warehouse"/>
                <ComboBoxItem Content="Outlet"/>
            </ComboBox>

            <ComboBox x:Name="FromPicker" Width="220" DisplayMemberPath="Name" SelectedValuePath="Id" Margin="0,0,12,0"/>

            <TextBlock Text="To:" Margin="0,0,6,0" VerticalAlignment="Center"/>
            <ComboBox x:Name="ToTypeBox" Width="120" Margin="0,0,6,0"
                      SelectedIndex="1">
                <ComboBoxItem Content="Warehouse"/>
                <ComboBoxItem Content="Outlet"/>
            </ComboBox>
            <ComboBox x:Name="ToPicker" Width="220" DisplayMemberPath="Name" SelectedValuePath="Id" Margin="0,0,12,0"/>
            <TextBlock Text="Dispatch Date:" Margin="0,0,6,0" VerticalAlignment="Center"/>
            <DatePicker x:Name="EffectiveDate" Width="140"/>
            
        </ToolBar>

        <ToolBar DockPanel.Dock="Top">
            <Button x:Name="BtnOpenDrafts" Content="Open Drafts" Width="90" Margin="6,0,0,0" Click="BtnOpenDrafts_Click"/>
            <Button x:Name="BtnOpenReceipts" Content="Open Receipts" Width="100" Margin="6,0,0,0" Click="BtnOpenReceipts_Click"/>
            <Button x:Name="BtnDispatch" Content="Dispatch" Width="90" Margin="6,0,0,0" Click="BtnDispatch_Click" IsEnabled="False"/>
            <Button x:Name="BtnUndoDispatch" Content="Undo Dispatch" Width="100" Margin="6,0,0,0" Click="BtnUndoDispatch_Click" IsEnabled="False"/>
            <Button x:Name="BtnReceive" Content="Receive" Width="90" Margin="6,0,0,0" Click="BtnReceive_Click" IsEnabled="False"/>
            <Button x:Name="BtnUndoReceive" Content="Undo Receive" Width="90" Margin="6,0,0,0" Click="BtnUndoReceive_Click" IsEnabled="False"/>
            <Separator/>
            <Button x:Name="BtnPrintDispatch" Content="Print Dispatch" Width="100" Click="BtnPrintDispatch_Click" IsEnabled="False"/>
            <Button x:Name="BtnPrintReceive" Content="Print Receive" Width="90" Margin="6,0,0,0" Click="BtnPrintReceive_Click" IsEnabled="False"/>
            <Separator/>
            <Button x:Name="BtnClear" Content="Clear" Width="70" Margin="8,0,0,0" Click="BtnClear_Click"/>
            <Separator/>
            <TextBlock Text="Transfer No: " FontWeight="SemiBold" VerticalAlignment="Center"/>
            <TextBlock x:Name="TransferNoText" FontWeight="SemiBold" VerticalAlignment="Center"/>
        </ToolBar>

        <!-- Search/Add bar -->
        <Border x:Name="SearchAddBar" DockPanel.Dock="Top" Padding="10" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
            <!-- NEW: make it a Grid with two columns (left: search/add; right: availability) -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- LEFT side: unchanged (your search/add) -->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="Scan / Search:" VerticalAlignment="Center" Margin="0,0,4,0"/>
                    <Grid>
                        <TextBox x:Name="SearchBox"
                         Width="360" Height="28"
                         VerticalContentAlignment="Center"
                         TextChanged="SearchBox_TextChanged"
                         PreviewKeyDown="SearchBox_PreviewKeyDown" Style="{StaticResource Txt.Search}"/>
                        <Popup x:Name="SearchPopup"
                       PlacementTarget="{Binding ElementName=SearchBox}"
                       Placement="Bottom"
                       StaysOpen="False"
                       AllowsTransparency="True">
                            <Border Background="White" BorderBrush="#DDD" BorderThickness="1" CornerRadius="4"
                            Padding="4" MinWidth="{Binding ElementName=SearchBox, Path=ActualWidth}">
                                <ListBox x:Name="SearchList"
                                 MouseDoubleClick="SearchList_MouseDoubleClick"
                                 PreviewKeyDown="SearchList_PreviewKeyDown">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding DisplayName}" />
                                                <TextBlock Text=" — " Foreground="Gray"/>
                                                <TextBlock Text="{Binding Sku}" Foreground="Gray"/>
                                                <TextBlock Text=" (" Foreground="Gray"/>
                                                <TextBlock Text="{Binding Barcode}" Foreground="Gray"/>
                                                <TextBlock Text=")" Foreground="Gray"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Border>
                        </Popup>
                    </Grid>

                    <Button x:Name="BtnAddLine" Content="Add" Width="90" Click="BtnAddLine_Click" Margin="8,0,0,0"/>
                    <Button x:Name="BtnSaveLines" Content="Save Lines" Width="110" Click="BtnSaveLines_Click" Margin="8,0,0,0"/>
                </StackPanel>

                <!-- RIGHT side: live Available info -->
                <StackPanel x:Name="AvailablePanel"
            Grid.Column="1"
            Orientation="Horizontal"
            VerticalAlignment="Center"
            Visibility="Collapsed">
                    <TextBlock x:Name="AvailableLabel" Text="Available: " Margin="16,0,4,0"
               VerticalAlignment="Center" FontWeight="SemiBold"/>
                    <TextBox x:Name="AvailableBox" Width="110" IsReadOnly="True"
             HorizontalContentAlignment="Right"
             ToolTip="On-hand at the selected From location for the current item."/>
                </StackPanel>

            </Grid>
        </Border>




        <!-- Grid -->
        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <DataGrid x:Name="LinesGrid"
              AutoGenerateColumns="False"
              CanUserAddRows="False"
              CanUserDeleteRows="True"
              IsReadOnly="False"
              HeadersVisibility="Column,Row"
              LoadingRow="LinesGrid_LoadingRow"
              RowEditEnding="LinesGrid_RowEditEnding"
              SelectionChanged="LinesGrid_SelectionChanged"
              CellEditEnding="LinesGrid_CellEditEnding"
              PreparingCellForEdit="LinesGrid_PreparingCellForEdit">

                <DataGrid.RowHeaderTemplate>
                    <!-- Row serial # (1-based) -->
                    <DataTemplate>
                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=AlternationIndex}"
                           
                           HorizontalAlignment="Center"/>
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>
                <DataGrid.Resources>
                    <!-- Make AlternationIndex count large so it never wraps -->
                    <Style TargetType="DataGrid">
                        <Setter Property="AlternationCount" Value="1000000"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>

                    <!-- (REMOVED the old '#' column) -->

                    <DataGridTextColumn Header="SKU" Width="120" IsReadOnly="True"
                                Binding="{Binding SkuSnapshot}" Visibility="Collapsed"/>

                    <DataGridTemplateColumn Header="Item" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,2,0,2">
                                    <TextBlock Text="{Binding ItemNameSnapshot}" FontWeight="SemiBold"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn x:Name="QtyExpectedColumn"
                                Header="Qty Expected" Width="110"
                                Binding="{Binding QtyExpected, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.####}}"/>

                    <DataGridTextColumn x:Name="QtyReceivedColumn" Header="Qty Received" Width="120"
                                Binding="{Binding QtyReceived, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.####}}"/>

                    <DataGridTemplateColumn x:Name="ShortColumn" Header="Short" Width="100" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource QtyVarianceConverter}" ConverterParameter="short" StringFormat="{}{0:0.####}">
                                            <Binding Path="QtyExpected"/>
                                            <Binding Path="QtyReceived"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn x:Name="OverColumn" Header="Over" Width="100" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource QtyVarianceConverter}" ConverterParameter="over" StringFormat="{}{0:0.####}">
                                            <Binding Path="QtyExpected"/>
                                            <Binding Path="QtyReceived"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="Cost" Width="80" IsReadOnly="True"
                                Binding="{Binding UnitCostExpected, StringFormat={}{0:0.####}}"/>

                    <DataGridTextColumn x:Name="RemarksColumn" Header="Remarks" Width="200"
                                Binding="{Binding Remarks, UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTextColumn x:Name="VarianceNoteColumn" Header="Variance Note" Width="200"
                                Binding="{Binding VarianceNote, UpdateSourceTrigger=PropertyChanged}"/>

                    <!-- NEW: Delete column (only visible while Draft; we toggle in UpdateUiState) -->
                    <DataGridTemplateColumn x:Name="DeleteColumn" Header="" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Delete" Padding="6,2"
                                Click="DeleteLine_Click"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>

            <!-- Footer totals -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,8,0,0">
                <TextBlock Text="Lines:"/>
                <TextBlock x:Name="LinesCountText" FontWeight="SemiBold"/>
            </StackPanel>
        </Grid>


    </DockPanel>
</Window>
