<Fluent:RibbonWindow x:Class="Pos.Client.Wpf.Windows.Shell.DashboardWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:Fluent="urn:fluent-ribbon"
                     mc:Ignorable="d"
                     Title="POS — Dashboard"
                     Width="1200"
                     Height="800"
                     WindowStartupLocation="CenterScreen">

    <!-- ONE root content -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Ribbon -->
        <Fluent:Ribbon Grid.Row="0">

            <!-- Backstage (MUST wrap in BackstageTabControl) -->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem Header="Settings" KeyTip="S">
                            <ScrollViewer Padding="16">
                                <StackPanel>
                                    <TextBlock Text="Application Settings" FontSize="18" FontWeight="SemiBold" Margin="0,0,0,12"/>
                                    <!-- Put your settings UI here -->
                                </StackPanel>
                            </ScrollViewer>
                        </Fluent:BackstageTabItem>

                        <Fluent:BackstageTabItem Header="About" KeyTip="A">
                            <StackPanel Margin="16">
                                <TextBlock Text="PosSuite" FontSize="18" FontWeight="SemiBold"/>
                                <TextBlock Text="Multi-outlet POS with offline-first sync" Margin="0,8,0,0"/>
                                <Button Content="Exit" Width="110" Margin="0,12,0,0" Command="{Binding ExitCmd}"/>
                            </StackPanel>
                        </Fluent:BackstageTabItem>

                        <!-- Optional: buttons directly inside the Backstage (valid) -->
                        <!--<Fluent:Button Header="Theme: Blue" />-->
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!-- Quick Access (v11-correct) -->
            <Fluent:Ribbon.QuickAccessItems>
                <!-- Bind to existing controls or provide inline content -->
                <Fluent:QuickAccessMenuItem Target="{Binding ElementName=BtnNewSale}" IsChecked="True"/>
                <Fluent:QuickAccessMenuItem Target="{Binding ElementName=BtnReports}" IsChecked="True"/>
            </Fluent:Ribbon.QuickAccessItems>

            <!-- Contextual Tab Groups MUST be in this collection -->
            <Fluent:Ribbon.ContextualGroups>
                <Fluent:RibbonContextualTabGroup x:Name="transferGroup"
                                         Header="Transfer"
                                         Visibility="{Binding TransferTabVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Fluent:Ribbon.ContextualGroups>

            <!-- Normal tabs -->
            <Fluent:RibbonTabItem Header="Home" KeyTip="H">
                <Fluent:RibbonGroupBox Header="Sales">
                    <Fluent:Button x:Name="BtnNewSale"
                         Header="New Sale"
                         KeyTip="N"
                         Command="{Binding NewSaleCmd}"/>
                    <Fluent:Button Header="Returns"
                         Command="{Binding OpenReturnsCmd}"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Inventory">
                    <Fluent:Button Header="Purchase" Command="{Binding OpenPurchaseCmd}"/>
                    <Fluent:Button Header="Transfer" Command="{Binding OpenTransferCmd}"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Admin">
                    <Fluent:Button Header="Products"          Command="{Binding OpenProductsCmd}"/>
                    <Fluent:Button Header="Suppliers"         Command="{Binding OpenSuppliersCmd}"/>
                    <Fluent:Button Header="Outlets/Counters"  Command="{Binding OpenOutletsCountersCmd}"/>
                    <Fluent:Button Header="Users"             Command="{Binding OpenUsersCmd}"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Reports">
                    <Fluent:Button x:Name="BtnReports"
                         Header="Open Reports"
                         Command="{Binding OpenReportsCmd}"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <!-- Contextual tab: associate via Group -->
            <Fluent:RibbonTabItem Header="Transfer Tools" Group="{Binding Source={x:Reference transferGroup}}">
                <Fluent:RibbonGroupBox Header="Receive">
                    <Fluent:Button Header="Receive Dispatch" Command="{Binding ReceiveDispatchCmd}"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

        </Fluent:Ribbon>

        <!-- Content -->
        <Border Grid.Row="1" CornerRadius="8" Padding="16" Margin="12"
            Background="{DynamicResource ControlBackgroundBrush}">
            <ContentPresenter Content="{Binding CurrentView}" />
        </Border>

        <!-- Status Bar -->
        <Fluent:StatusBar Grid.Row="2">
            <TextBlock Text="{Binding OutletName}" Margin="12,0"/>
            <Separator/>
            <TextBlock Text="{Binding CounterName}" Margin="12,0"/>
            <Separator/>
            <TextBlock Text="{Binding CurrentUserName}" Margin="12,0"/>
            <Separator/>
            <TextBlock Text="{Binding OnlineText}" Margin="12,0"/>
            <Separator/>
            <TextBlock Text="{Binding LastSyncText}" Margin="12,0"/>
            <Separator/>
            <TextBlock Text="{Binding TillStatus}" Margin="12,0"/>
        </Fluent:StatusBar>


    </Grid>
</Fluent:RibbonWindow>
